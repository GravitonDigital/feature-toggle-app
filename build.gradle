plugins {
  id "com.enonic.xp.app" version "3.5.2"
  id "com.github.node-gradle.node" version "7.1.0"
}

app {
  name = "${appName}"
  displayName = "${appDisplayName}"
  vendorName = "${vendorName}"
  vendorUrl = "${vendorUrl}"
  systemVersion = "${xpVersion}"
}

dependencies {
  include "com.enonic.xp:lib-admin:${xpVersion}"
  include "com.enonic.xp:lib-event:${xpVersion}"
  include "com.enonic.xp:lib-content:${xpVersion}"
  include "com.enonic.xp:lib-portal:${xpVersion}"
  include "no.item:lib-xp-time:1.2.0"
  include "com.github.tineikt:xp-lib-freemarker:2.0.3"
  include "no.item:lib-xp-feature-toggles:0.5.0-SNAPSHOT"
  webjar "org.webjars.npm:hotwired__turbo:8.0.12"
}

repositories {
  mavenLocal()
  mavenCentral()
  xp.enonicRepo()
  maven { url "https://repo.itemtest.no/releases" }
  maven { url "https://jitpack.io" }
}

node {
  download = true
  version = "22.12.0"
}

processResources {
	exclude "**/.gitkeep"
  exclude "**/*.json"
	exclude "**/*.ts"
	exclude "**/*.tsx"
}

tasks.register("dev", Exec) {
  if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    commandLine "cmd", "/c", "gradlew.bat", "deploy", "-t"
  } else {
    commandLine "./gradlew", "deploy", "-t"
  }
}

tasks.register("npmBuild", NpmTask) {
  args = [
    "run",
    "--silent",
    "build"
  ]
  dependsOn npmInstall
  environment = [
    "FORCE_COLOR": "true",
    "LOG_LEVEL_FROM_GRADLE": gradle.startParameter.logLevel.toString(),
    "NODE_ENV": project.hasProperty("dev") || project.hasProperty("development") ? "development" : "production"
  ]
  inputs.dir "src/main/resources"
  outputs.dir "build/resources/main"
  outputs.upToDateWhen { false }
}

jar.dependsOn npmBuild

tasks.register("npmCheck", NpmTask) {
	dependsOn npmInstall
	args = [
		"run",
		"check"
	]
	environment = [
		"FORCE_COLOR": "true",
	]
}

check.dependsOn npmCheck

tasks.withType(Copy).configureEach {
  includeEmptyDirs = false
}
